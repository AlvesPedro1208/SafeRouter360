package dao;

import java.sql.*;

public class ConexaoOracle {
    private static final String URL = "jdbc:oracle:thin:@localhost:1521:XE"; // banco local, SID padr√£o XE
    private static final String USUARIO = "system";
    private static final String SENHA = "root";

    public static Connection conectar() {
        try {
            Connection conn = DriverManager.getConnection(URL, USUARIO, SENHA);
            System.out.println("‚úÖ Conex√£o bem-sucedida com OracleDB!");
            return conn;
        } catch (SQLException e) {
            System.err.println("‚ùå Erro ao conectar: " + e.getMessage());
            return null;
        }
    }

    public static void criarTabelas() {
        try (Connection conn = conectar();
             Statement stmt = conn.createStatement()) {

            // Cria√ß√£o da tabela sensores
            stmt.execute("""
            CREATE TABLE sensores (
                id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                localizacao VARCHAR2(100) NOT NULL,
                nivel_cm NUMBER(5,2) NOT NULL,
                data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        """);

            // Cria√ß√£o da tabela alertas
            stmt.execute("""
            CREATE TABLE alertas (
                id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                id_sensor NUMBER NOT NULL,
                nivel_cm NUMBER(5,2) NOT NULL,
                mensagem VARCHAR2(200),
                data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                CONSTRAINT fk_alerta_sensor FOREIGN KEY (id_sensor) REFERENCES sensores(id)
            )
        """);

            // Cria√ß√£o da tabela abrigos
            stmt.execute("""
            CREATE TABLE abrigos (
                id_abrigo NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                nome VARCHAR2(100) NOT NULL,
                localizacao VARCHAR2(150) NOT NULL,
                capacidade INT NOT NULL,
                ocupacao_atual INT DEFAULT 0,
                telefone VARCHAR2(20)
            )
        """);

            System.out.println("‚úÖ Todas as tabelas foram criadas com sucesso!");

        } catch (SQLException e) {
            System.err.println("‚ùå Erro ao criar tabelas: " + e.getMessage());
        }
    }

    public static void deletarTabelas() {
        try (Connection conn = conectar();
             Statement stmt = conn.createStatement()) {

            // Ordem correta: deletar depend√™ncias antes
            stmt.execute("DROP TABLE alertas CASCADE CONSTRAINTS");
            stmt.execute("DROP TABLE sensores CASCADE CONSTRAINTS");
            stmt.execute("DROP TABLE abrigos CASCADE CONSTRAINTS");

            System.out.println("üóëÔ∏è Todas as tabelas foram deletadas com sucesso!");

        } catch (SQLException e) {
            System.err.println("‚ùå Erro ao deletar tabelas: " + e.getMessage());
        }
    }
    public static void listarTabelas() {
        String sql = """
            SELECT table_name
            FROM user_tables
            WHERE table_name IN ('SENSORES', 'ALERTAS', 'ABRIGOS')
            ORDER BY table_name
        """;

        try (Connection conn = conectar();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("\nüìã Tabelas existentes no banco (relacionadas ao projeto):");

            boolean encontrou = false;
            while (rs.next()) {
                String nome = rs.getString("table_name");
                System.out.println("üü¢ " + nome);
                encontrou = true;
            }

            if (!encontrou) {
                System.out.println("‚ö†Ô∏è Nenhuma tabela do projeto encontrada.");
            }

        } catch (SQLException e) {
            System.err.println("‚ùå Erro ao listar tabelas: " + e.getMessage());
        }
    }

}



